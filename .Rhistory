runApp('C:/workspaceMLNYC/projXrestaurants/restdemo')
runApp('C:/workspaceMLNYC/projXrestaurants/restdemo')
runApp('C:/workspaceMLNYC/projXrestaurants/restdemo')
runApp('C:/workspaceMLNYC/projXrestaurants/restdemo')
runApp('C:/workspaceMLNYC/projXrestaurants/restdemo')
runApp('C:/workspaceMLNYC/projXrestaurants/restdemo')
runApp('C:/workspaceMLNYC/projXrestaurants/restdemo')
runApp('C:/workspaceMLNYC/projXrestaurants/restdemo')
runApp()
runApp('C:/workspaceMLNYC/projXrestaurants/restdemo')
runApp()
runApp('C:/workspaceMLNYC/projXrestaurants/restdemo')
runApp('C:/workspaceMLNYC/projXrestaurants/restdemo')
runApp('C:/workspaceMLNYC/projXrestaurants/restdemo')
runApp('C:/workspaceMLNYC/projXrestaurants/restdemo')
runApp('C:/workspaceMLNYC/projXrestaurants/restdemo')
runApp('C:/workspaceMLNYC/projXrestaurants/restdemo')
install.packages(plotly)
runApp('C:/workspaceMLNYC/projXrestaurants/restdemo')
runApp('C:/workspaceMLNYC/projXrestaurants/restdemo')
runApp('C:/workspaceMLNYC/projXrestaurants/restdemo')
runApp('C:/workspaceMLNYC/projXrestaurants/restdemo')
runApp('C:/workspaceMLNYC/projXrestaurants/restdemo')
install.packages("DT")
shiny::runApp('C:/workspaceMLNYC/projXrestaurants/restdemo')
runApp('C:/workspaceMLNYC/projXrestaurants/restdemo')
runApp('C:/workspaceMLNYC/projXrestaurants/restdemo')
runApp('C:/workspaceMLNYC/projXrestaurants/restdemo')
runApp('C:/workspaceMLNYC/projXrestaurants/restdemo')
runApp('C:/workspaceMLNYC/projXrestaurants/restdemo')
runApp('C:/workspaceMLNYC/projXrestaurants/restdemo')
runApp('C:/workspaceMLNYC/projXrestaurants/restdemo')
runApp('C:/workspaceMLNYC/projXrestaurants/restdemo')
runApp('C:/workspaceMLNYC/projXrestaurants/restdemo')
runApp()
runApp('C:/workspaceMLNYC/projXrestaurants/restdemo')
runApp('C:/workspaceMLNYC/projXrestaurants/restdemo')
runApp('C:/workspaceMLNYC/projXrestaurants/restdemo')
runApp('C:/workspaceMLNYC/projXrestaurants/restdemo')
runApp('C:/workspaceMLNYC/projXrestaurants/restdemo')
runApp('C:/workspaceMLNYC/projXrestaurants/restdemo')
runApp('C:/workspaceMLNYC/projXrestaurants/restdemo')
result <- fromJSON(txt = "C:\\workspaceMLNYC\\projXrestaurants\\ABCEats-Restaurants_files\\Bronx.json")
json_bronx <- as.data.frame(result)
df_bronx <- data.frame(sapply(json_bronx,c))
runApp('C:/workspaceMLNYC/projXrestaurants/restdemo')
result <- fromJSON(txt = "C:\\workspaceMLNYC\\projXrestaurants\\ABCEats-Restaurants_files\\Bronx.json")
json_bronx <- as.data.frame(result)
df_bronx <- data.frame(sapply(json_bronx,c))
result <- fromJSON(txt = "C:\\workspaceMLNYC\\projXrestaurants\\ABCEats-Restaurants_files\\Brooklyn.json")
json_bk <- as.data.frame(result)
df_bk <- data.frame(sapply(json_bk,c))
result <- fromJSON(txt = "C:\\workspaceMLNYC\\projXrestaurants\\ABCEats-Restaurants_files\\Manhattan.json")
json_manh <- as.data.frame(result)
df_manh <- data.frame(sapply(json_manh,c))
result <- fromJSON(txt = "C:\\workspaceMLNYC\\projXrestaurants\\ABCEats-Restaurants_files\\Queens.json")
json_queens <- as.data.frame(result)
df_queens <- data.frame(sapply(json_queens,c))
result <- fromJSON(txt = "C:\\workspaceMLNYC\\projXrestaurants\\ABCEats-Restaurants_files\\Staten Island.json")
json_st <- as.data.frame(result)
df_st <- data.frame(sapply(json_st,c))
df_all = data.frame(sapply(rbind(df_bronx, df_bk, df_manh, df_queens, df_st),c))
install.packages("datatables")
install.packages("datatable")
install.packages(DT)
install_github(http://rstudio.github.io/DT/)
install_github('http://rstudio.github.io/DT/')
install.packages(devtools)
install.packages("devtools"")
install.packages("devtools")
install.packages("devtools")
install.packages("data.table")
install.packages("Rtools")
library(DT)
library(data.table)
shiny::runApp('C:/workspaceMLNYC/projXrestaurants/restdemo')
# install.packages("devtools")
install.packages("dplyr")
runApp('C:/workspaceMLNYC/projXrestaurants/restdemo')
runApp('C:/workspaceMLNYC/projXrestaurants/restdemo')
install.packages("tidyverse")
runApp('C:/workspaceMLNYC/projXrestaurants/restdemo')
# install.packages("devtools")
install.packages("rjson")
runApp('C:/workspaceMLNYC/projXrestaurants/restdemo')
install.packages("rjson")
runApp('C:/workspaceMLNYC/projXrestaurants/restdemo')
runApp('C:/workspaceMLNYC/projXrestaurants/restdemo')
runApp('C:/workspaceMLNYC/projXrestaurants/restdemo')
runApp('C:/workspaceMLNYC/projXrestaurants/restdemo')
runApp('C:/workspaceMLNYC/projXrestaurants/restdemo')
runApp('C:/workspaceMLNYC/projXrestaurants/restdemo')
runApp('C:/workspaceMLNYC/projXrestaurants/restdemo')
runApp('C:/workspaceMLNYC/projXrestaurants/restdemo')
runApp('C:/workspaceMLNYC/projXrestaurants/restdemo')
runApp('C:/workspaceMLNYC/projXrestaurants/restdemo')
runApp('C:/workspaceMLNYC/projXrestaurants/restdemo')
# DATABASE 1
result <- fromJSON(txt = "C:\\workspaceMLNYC\\projXrestaurants\\ABCEats-Restaurants_files\\Bronx.json")
result <- fromJSON(txt = "C:\\workspaceMLNYC\\projXrestaurants\\ABCEats-Restaurants_files\\Brooklyn.json")
shiny::runApp('C:/workspaceMLNYC/projXrestaurants/restdemo')
runApp('C:/workspaceMLNYC/projXrestaurants/restdemo')
runApp('C:/workspaceMLNYC/projXrestaurants/restdemo')
runApp('C:/workspaceMLNYC/projXrestaurants/restdemo')
runApp('C:/workspaceMLNYC/projXrestaurants/restdemo')
# DATABASE 1
result <- rjson::fromJSON(txt = "C:\\workspaceMLNYC\\projXrestaurants\\ABCEats-Restaurants_files\\Bronx.json")
# DATABASE 1
result <- rjson::fromJSON("C:\\workspaceMLNYC\\projXrestaurants\\ABCEats-Restaurants_files\\Bronx.json")
# DATABASE 1
result <- fromJSON("C:\\workspaceMLNYC\\projXrestaurants\\ABCEats-Restaurants_files\\Bronx.json")
View(df_bronx)
result <- fromJSON("C:\\workspaceMLNYC\\projXrestaurants\\ABCEats-Restaurants_files\\Bronx.json")
# DATABASE 1
result <- fromJSON(file="C:\\workspaceMLNYC\\projXrestaurants\\ABCEats-Restaurants_files\\Bronx.json")
runApp('C:/workspaceMLNYC/projXrestaurants/restdemo')
runApp('C:/workspaceMLNYC/projXrestaurants/restdemo')
runApp('C:/workspaceMLNYC/projXrestaurants/restdemo')
View(df_violations_total)
View(df_bronx)
df_bronx <- data.frame(sapply(json_bronx,c))
View(df_bronx)
runApp('C:/workspaceMLNYC/projXrestaurants/restdemo')
runApp('C:/workspaceMLNYC/projXrestaurants/restdemo')
result <- fromJSON("C:\\workspaceMLNYC\\projXrestaurants\\ABCEats-Restaurants_files\\Bronx.json")
result <- fromJSON("C:\\workspaceMLNYC\\projXrestaurants\\ABCEats-Restaurants_files\\Bronx.json")
View(df_manh)
runApp('C:/workspaceMLNYC/projXrestaurants/restdemo')
runApp('C:/workspaceMLNYC/projXrestaurants/restdemo')
# library(rjson)
libray(jsonlite)
# library(rjson)
library(jsonlite)
runApp('C:/workspaceMLNYC/projXrestaurants/restdemo')
View(df_bronx)
result <- fromJSON(txt = "C:\\workspaceMLNYC\\projXrestaurants\\ABCEats-Restaurants_files\\Bronx.json")
result <- fromJSON(file = "C:\\workspaceMLNYC\\projXrestaurants\\ABCEats-Restaurants_files\\Bronx.json")
json_bronx <- as.data.frame(result)
df_bronx <- data.frame(sapply(json_bronx,c))
View(df_bronx)
View(json_test)
View(df_bk)
View(df_bronx)
View(result)
typeof(result)
View(json_bronx)
View(df_bronx)
result <- fromJSON(file = "C:\\workspaceMLNYC\\projXrestaurants\\ABCEats-Restaurants_files\\Bronx.json")
typeof(result)
json_bronx <- as.data.frame(result)
df_bronx <- data.frame(t(sapply(json_bronx,c)))
library(rjson)
result <- fromJSON(txt = "C:\\workspaceMLNYC\\projXrestaurants\\ABCEats-Restaurants_files\\Bronx.json")
results[0]
result[0]
result[0,]
result[,0]
result[1,0]
result[0,0]
shape(result)
dim(result)
result <- fromJSON(file = "C:\\workspaceMLNYC\\projXrestaurants\\ABCEats-Restaurants_files\\Bronx.json")
dim(result)
View(result)
dim(result[[0]])
dim(result[[0,]])
result[[0]]
result[[1]]
result[[1],]
result[[1,]]
typeof(result[[1]])
dim(result[[1]])
result[[1]][[1]]
result[[1]][[,]]
result[[1]][[,]]
result[[1]][[2]]
# result[[1]][[2]]
do.call(rbind, result)
View(result)
json_bronx <- as.data.frame(do.call(rbind, result))
result <- fromJSON(file = "C:\\workspaceMLNYC\\projXrestaurants\\ABCEats-Restaurants_files\\Bronx.json")
# typeof(result)
# result[[1]][[2]]
json_bronx <- as.data.frame(do.call(rbind, result))
result <- fromJSON(file = "C:\\workspaceMLNYC\\projXrestaurants\\ABCEats-Restaurants_files\\Bronx.json")
library(dplyr)
library(jsonlite)
library(tidyverse)
library(ggplot2)
# library(rjson)
library(jsonlite)
library(shiny)
result <- fromJSON(file = "C:\\workspaceMLNYC\\projXrestaurants\\ABCEats-Restaurants_files\\Bronx.json")
typeof(result)
View(result)
result <- fromJSON(file = "C:\\workspaceMLNYC\\projXrestaurants\\ABCEats-Restaurants_files\\Bronx.json", flatten = TRUE)
library(dplyr)
library(jsonlite)
library(tidyverse)
library(ggplot2)
library(rjson)
# library(jsonlite)
library(shiny)
result <- fromJSON(file = "C:\\workspaceMLNYC\\projXrestaurants\\ABCEats-Restaurants_files\\Bronx.json", flatten = TRUE)
# install.packages("shiny")
# install.packages("rjson")
# install.packages("Rtools")
library(dplyr)
library(jsonlite)
library(tidyverse)
library(ggplot2)
# library(rjson)
library(jsonlite)
library(shiny)
result <- fromJSON(file = "C:\\workspaceMLNYC\\projXrestaurants\\ABCEats-Restaurants_files\\Bronx.json", flatten = TRUE)
result <- jsonlite::fromJSON(file = "C:\\workspaceMLNYC\\projXrestaurants\\ABCEats-Restaurants_files\\Bronx.json", flatten = TRUE)
result <- jsonlite::fromJSON(txt = "C:\\workspaceMLNYC\\projXrestaurants\\ABCEats-Restaurants_files\\Bronx.json", flatten = TRUE)
typeof(result)
json_bronx <- as.data.frame(result)
df_bronx <- data.frame(t(sapply(json_bronx,c)))
result <- jsonlite::fromJSON(txt = "C:\\workspaceMLNYC\\projXrestaurants\\ABCEats-Restaurants_files\\Bronx.json", flatten = TRUE)
typeof(result)
# result[[1]][[2]]
# json_bronx <- as.data.frame(do.call(rbind, result))
json_bronx <- as.data.frame(result)
df_bronx <- data.frame(sapply(json_bronx,c))
runApp('C:/workspaceMLNYC/projXrestaurants/restdemo')
runApp('C:/workspaceMLNYC/projXrestaurants/restdemo')
library(jsonlite)
library(shiny)
library(data.table)
# install.packages("devtools")
# install.packages("rjson")
# install_github('http://rstudio.github.io/DT/')
# install.packages("data.table")
# DATABASE 1
result <- jsonlite::fromJSON(txt = "C:\\workspaceMLNYC\\projXrestaurants\\ABCEats-Restaurants_files\\Bronx.json")
json_bronx <- as.data.frame(result)
df_bronx <- data.frame(sapply(json_bronx,c))
result <- jsonlite::fromJSON(txt = "C:\\workspaceMLNYC\\projXrestaurants\\ABCEats-Restaurants_files\\Brooklyn.json")
json_bk <- as.data.frame(result)
df_bk <- data.frame(sapply(json_bk,c))
result <- jsonlite::fromJSON(txt = "C:\\workspaceMLNYC\\projXrestaurants\\ABCEats-Restaurants_files\\Manhattan.json")
json_manh <- as.data.frame(result)
df_manh <- data.frame(sapply(json_manh,c))
result <- jsonlite::fromJSON(txt = "C:\\workspaceMLNYC\\projXrestaurants\\ABCEats-Restaurants_files\\Queens.json")
json_queens <- as.data.frame(result)
df_queens <- data.frame(sapply(json_queens,c))
result <- jsonlite::fromJSON(txt = "C:\\workspaceMLNYC\\projXrestaurants\\ABCEats-Restaurants_files\\Staten Island.json")
json_st <- as.data.frame(result)
df_st <- data.frame(sapply(json_st,c))
df_all = data.frame(sapply(rbind(df_bronx, df_bk, df_manh, df_queens, df_st),c))
runApp('C:/workspaceMLNYC/projXrestaurants/restdemo')
runApp('C:/workspaceMLNYC/projXrestaurants/restdemo')
runApp('C:/workspaceMLNYC/projXrestaurants/restdemo')
runApp('C:/workspaceMLNYC/projXrestaurants/restdemo')
runApp('C:/workspaceMLNYC/projXrestaurants/restdemo')
View(df_all)
runApp('C:/workspaceMLNYC/projXrestaurants/restdemo')
runApp('C:/workspaceMLNYC/projXrestaurants/restdemo')
shiny::runApp('C:/workspaceMLNYC/projXrestaurants/restdemo')
runApp('C:/workspaceMLNYC/projXrestaurants/restdemo')
runApp('C:/workspaceMLNYC/projXrestaurants/restdemo')
runApp('C:/workspaceMLNYC/projXrestaurants/restdemo')
runApp('C:/workspaceMLNYC/projXrestaurants/restdemo')
runApp('C:/workspaceMLNYC/projXrestaurants/restdemo')
shiny::runApp('C:/workspaceMLNYC/projXrestaurants/restdemo')
runApp('C:/workspaceMLNYC/projXrestaurants/restdemo')
runApp('C:/workspaceMLNYC/projXrestaurants/restdemo')
runApp('C:/workspaceMLNYC/projXrestaurants/restdemo')
packageVersion('data.table')
devtools::install_github('https://github.com/rstudio/DT/')
runApp('C:/workspaceMLNYC/projXrestaurants/restdemo')
runApp('C:/workspaceMLNYC/projXrestaurants/restdemo')
shiny::runApp('C:/workspaceMLNYC/projXrestaurants/restdemo')
runApp('C:/workspaceMLNYC/projXrestaurants/restdemo')
runApp('C:/workspaceMLNYC/projXrestaurants/restdemo')
shiny::runApp('C:/workspaceMLNYC/projXrestaurants/restdemo')
runApp('C:/workspaceMLNYC/projXrestaurants/restdemo')
View(df_all)
runApp('C:/workspaceMLNYC/projXrestaurants/restdemo')
runApp('C:/workspaceMLNYC/projXrestaurants/restdemo')
runApp('C:/workspaceMLNYC/projXrestaurants/restdemo')
View(df_bk)
runApp('C:/workspaceMLNYC/projXrestaurants/restdemo')
runApp('C:/workspaceMLNYC/projXrestaurants/restdemo')
runApp('C:/workspaceMLNYC/projXrestaurants/restdemo')
View(df_violations_total)
View(df_violations_total)
install.packages('rsconnect')
library(rsconnect)
install.packages('here')
library(here)
here()
setwd(here())
shiny::runApp('C:/workspaceMLNYC/_proj2restaurants/restdemo')
runApp('C:/workspaceMLNYC/_proj2restaurants/restdemo')
runApp('C:/workspaceMLNYC/_proj2restaurants/restdemo')
len(df_violations['CAMIS'])
length(df_violations['CAMIS'])
df_violations <- read.csv("./DOHMH_New_York_City_Restaurant_Inspection_Results_20221213.csv", header=TRUE, sep=",")
df_violations <- read.csv("./DOHMH_New_York_City_Restaurant_Inspection_Results_20221213.csv", header=TRUE, sep=",")
length(df_violations['CAMIS'])
length(df_violations$CAMIS)
df_violations <- read.csv("./DOHMH_New_York_City_Restaurant_Inspection_Results_20221213.csv", header=TRUE, sep=",")
# All sins are forgiven before January 1st, 2016
length(df_violations$CAMIS)
head(df_violations)
# All sins are forgiven before January 1st, 2016
unique(df_violations$CAMIS)
# All sins are forgiven before January 1st, 2016
length(unique(df_violations$CAMIS))
runApp('C:/workspaceMLNYC/_proj2restaurants/restdemo')
runApp('C:/workspaceMLNYC/_proj2restaurants/restdemo')
runApp('C:/workspaceMLNYC/_proj2restaurants/restdemo')
result2 <- jsonlite::fromJSON(txt = "https://data.cityofnewyork.us/resource/43nn-pn8j.json")
typeof(result2)
View(result2)
typeof(result2)
json_insp <- as.data.frame(result2)
json_insp <- as.data.frame(result2)
df_insp <- data.frame(sapply(json_insp,c))
typeof(df_insp)
typeof(result2)
df_insp <- data.frame(sapply(json_insp,c))
json_insp <- as.data.frame(result2)
df_insp <- data.frame(sapply(json_insp,c))
typeof(df_insp)
result2 <- jsonlite::fromJSON(txt = "https://data.cityofnewyork.us/resource/43nn-pn8j.json")
json_insp <- as.data.frame(result2)
df_insp <- data.frame(sapply(json_insp,c))
View(result)
View(result2)
typeof(results2)
typeof(result2)
typeof(json_insp)
json_insp <- as.data.frame(result2)
typeof(json_insp)
json_insp <- as.data.frame(result2)
typeof(json_insp)
typeof(json_st)
typeof(json_insp)
df_insp <- data.frame(sapply(json_insp,c))
typeof(json_insp)
typeof(df_all)
View(result2)
View(df_violations_total)
View(df_violations)
result2 <- jsonlite::fromJSON(txt = "https://data.cityofnewyork.us/resource/43nn-pn8j.json")
json_insp <- as.data.frame(result2)
df_violations <- data.frame(sapply(json_insp,c))
# df_violations <- read.csv("./DOHMH_New_York_City_Restaurant_Inspection_Results_20221213.csv", header=TRUE, sep=",")
# length(unique(df_violations$CAMIS))
df_violations[['INSPECTION.DATE']] = as.POSIXct(df_violations[['INSPECTION.DATE']], format = "%m/%d/%Y")
# df_violations <- read.csv("./DOHMH_New_York_City_Restaurant_Inspection_Results_20221213.csv", header=TRUE, sep=",")
# length(unique(df_violations$CAMIS))
df_violations[['inspection.date']] = as.POSIXct(df_violations[['inspection.date']], format = "%m/%d/%Y")
result2 <- jsonlite::fromJSON(txt = "https://data.cityofnewyork.us/resource/43nn-pn8j.json")
json_insp <- as.data.frame(result2)
df_violations <- data.frame(sapply(json_insp,c))
# df_violations <- read.csv("./DOHMH_New_York_City_Restaurant_Inspection_Results_20221213.csv", header=TRUE, sep=",")
# length(unique(df_violations$CAMIS))
df_violations[['inspection.date']] = as.POSIXct(df_violations[['inspection.date']], format = "%m/%d/%Y")
df_violations.head()
head(df_violations)
# head(df_violations)
df_violations[['inspection_date']] = as.POSIXct(df_violations[['inspection_date']], format = "%m/%d/%Y")
result2 <- jsonlite::fromJSON(txt = "https://data.cityofnewyork.us/resource/43nn-pn8j.json")
json_insp <- as.data.frame(result2)
df_violations <- data.frame(sapply(json_insp,c))
# head(df_violations)
df_violations[['inspection_date']] = as.POSIXct(df_violations[['inspection_date']], format = "%m/%d/%Y")
df_violations <- data.frame(sapply(df_violations,c))
# head(df_violations)
df_violations <- df_violations[order(df_violations$CAMIS),] # Sort by CAMIS number, effectively, grouping them
result2 <- jsonlite::fromJSON(txt = "https://data.cityofnewyork.us/resource/43nn-pn8j.json")
json_insp <- as.data.frame(result2)
df_violations <- data.frame(sapply(json_insp,c))
# head(df_violations)
df_violations[['inspection_date']] = as.POSIXct(df_violations[['inspection_date']], format = "%m/%d/%Y")
df_violations <- data.frame(sapply(df_violations,c))
# head(df_violations)
df_violations <- df_violations[order(df_violations$camis),] # Sort by CAMIS number, effectively, grouping them
rownames(df_violations) <- NULL # Reset the index
df_violations
print(df_violations.columns)
colnames(df_violations)
colnames(df_violations).toupper()
names(df_violations).toupper()
df_violations.toupper()
df_violations.names.toupper()
toupper(names(df_violations))
names(df_violations) = toupper(names(df_violations))
head(df_violations)
result2 <- jsonlite::fromJSON(txt = "https://data.cityofnewyork.us/resource/43nn-pn8j.json")
json_insp <- as.data.frame(result2)
df_violations <- data.frame(sapply(json_insp,c))
names(df_violations) = toupper(names(df_violations))
df_violations[['INSPECTION_DATE']] = as.POSIXct(df_violations[['INSPECTION_DATE']], format = "%m/%d/%Y")
# df_violations <- data.frame(sapply(df_violations,c))
# head(df_violations)
df_violations <- df_violations[order(df_violations$CAMIS),] # Sort by CAMIS number, effectively, grouping them
rownames(df_violations) <- NULL # Reset the index
df_violations
ids_uniq = unique(df_violations$CAMIS)
length(ids_uniq)
cols =  c("CAMIS", "Total", "Critical", "Not Critical", "Not Applicable")
df_violations_total = data.frame( matrix(nrow =0, ncol=length(cols)))
colnames(df_violations_total) = cols
print(colnames(df_violations_total))
for (i in ids_uniq) {
ct_total = nrow(subset(df_violations, df_violations$CAMIS == i))
ct_cr = nrow(subset(df_violations, df_violations$CAMIS == i & df_violations$CRITICAL.FLAG == "Critical"))
ct_nc = nrow(subset(df_violations, df_violations$CAMIS == i & df_violations$CRITICAL.FLAG == "Not Critical"))
ct_na = nrow(subset(df_violations, df_violations$CAMIS == i & df_violations$CRITICAL.FLAG == "Not Applicable"))
new_row = c(i, ct_total, ct_cr, ct_nc, ct_na)
df_violations_total = rbind(df_violations_total, new_row)
# print(paste("CAMIS ID:", i, "has total violations of:", ct_total, "of which Critical/NC/NA are", ct_cr, ct_nc, ct_na))
}
View(result2)
View(df_violations)
result2 <- jsonlite::fromJSON(txt = "https://data.cityofnewyork.us/resource/43nn-pn8j.json")
json_insp <- as.data.frame(result2)
df_violations <- data.frame(sapply(json_insp,c))
names(df_violations) = toupper(names(df_violations))
df_violations[['INSPECTION_DATE']] = as.POSIXct(df_violations[['INSPECTION_DATE']], format = "%m/%d/%Y")
df_violations <- df_violations[order(df_violations$CAMIS),] # Sort by CAMIS number, effectively, grouping them
rownames(df_violations) <- NULL # Reset the index
df_violations
ids_uniq = unique(df_violations$CAMIS)
length(ids_uniq)
cols =  c("CAMIS", "Total", "Critical", "Not Critical", "Not Applicable")
df_violations_total = data.frame( matrix(nrow =0, ncol=length(cols)))
colnames(df_violations_total) = cols
df_violations_total$Total = as.integer(df_violations_total$Total)
df_violations_total$Critical = as.integer(df_violations_total$Critical)
df_violations_total$`Not Critical` = as.integer(df_violations_total$`Not Critical`)
df_violations_total$`Not Applicable` = as.integer(df_violations_total$`Not Applicable`)
head(df_violations_total)
df_violations_total3 = as.data.frame(read_csv("df_violations_total.csv"))
# df_all %>% filter(MostRecentVendingBoro == "Bronx") %>% group_by(Cuisine) %>% summarise()
result2 <- jsonlite::fromJSON(txt = "https://data.cityofnewyork.us/resource/43nn-pn8j.json")
json_insp <- as.data.frame(result2)
df_violations <- data.frame(sapply(json_insp,c))
names(df_violations) = toupper(names(df_violations))
df_violations[['INSPECTION_DATE']] = as.POSIXct(df_violations[['INSPECTION_DATE']], format = "%m/%d/%Y")
df_violations <- df_violations[order(df_violations$CAMIS),] # Sort by CAMIS number, effectively, grouping them
rownames(df_violations) <- NULL # Reset the index
result2 <- jsonlite::fromJSON(txt = "https://data.cityofnewyork.us/resource/43nn-pn8j.json")
json_insp <- as.data.frame(result2)
df_violations <- data.frame(sapply(json_insp,c))
names(df_violations) = toupper(names(df_violations))
# df_violations[['INSPECTION_DATE']] = as.POSIXct(df_violations[['INSPECTION_DATE']], format = "%m/%d/%Y")
df_violations <- df_violations[order(df_violations$CAMIS),] # Sort by CAMIS number, effectively, grouping them
rownames(df_violations) <- NULL # Reset the index
cols =  c("CAMIS", "Total", "Critical", "Not Critical", "Not Applicable")
df_violations_total = data.frame( matrix(nrow =0, ncol=length(cols)))
colnames(df_violations_total) = cols
print(colnames(df_violations_total))
result2 <- jsonlite::fromJSON(txt = "https://data.cityofnewyork.us/resource/43nn-pn8j.json")
json_insp <- as.data.frame(result2)
df_violations <- data.frame(sapply(json_insp,c))
names(df_violations) = toupper(names(df_violations))
df_violations <- df_violations[order(df_violations$CAMIS),] # Sort by CAMIS number, effectively, grouping them
rownames(df_violations) <- NULL # Reset the index
result <- jsonlite::fromJSON(txt = "Bronx.json")
# DATABASE 1
result <- jsonlite::fromJSON(txt = "Bronx.json")
# DATABASE 1
result <- jsonlite::fromJSON(txt = "./Bronx.json")
# DATABASE 1
result <- jsonlite::fromJSON(txt = "onx.json")
# DATABASE 1
result <- jsonlite::fromJSON(txt = "Bronx.json")
result <- jsonlite::fromJSON(txt = "Brooklyn.json")
result <- jsonlite::fromJSON(txt = "Bronx.json")
result <- jsonlite::fromJSON(txt = "https://a816-health.nyc.gov/ABCEatsRestaurants/App/GetEntitiesByBoro/Bronx")
View(df_manh)
# DATABASE 1
result <- jsonlite::fromJSON(txt = "Bronx.json")
# DATABASE 1
result <- jsonlite::fromJSON(txt = 'Bronx.json')
# DATABASE 1
result <- jsonlite::fromJSON(txt = 'Br')
# DATABASE 1
result <- jsonlite::fromJSON(txt = 'Bronx.json')
# DATABASE 1
result <- jsonlite::fromJSON(txt = "Bronx.json")
setwd(here())
# DATABASE 1
result <- jsonlite::fromJSON(txt = "Bronx.json")
View(result)
result2 <- jsonlite::fromJSON(txt = "https://a816-health.nyc.gov/ABCEatsRestaurants/App/GetEntitiesByBoro/Bronx")
View(result2)
runApp('restdemo')
# DATABASE 1
# result <- jsonlite::fromJSON(txt = "Bronx.json")
result <- jsonlite::fromJSON(txt = "https://a816-health.nyc.gov/ABCEatsRestaurants/App/GetEntitiesByBoro/Bronx")
View(result2)
View(result2)
runApp('restdemo')
result <- jsonlite::fromJSON(txt = "https://a816-health.nyc.gov/ABCEatsRestaurants/App/GetEntitiesByBoro/Brooklyn")
runApp('restdemo')
runApp('restdemo')
install.packages(shinyDashboard)
install.packages(shinydashboard)
install.packages('shinydashboard'')
install.packages('shinydashboard')
install.packages('shinydashboard')
runApp('restdemo')
runApp('restdemo')
runApp('restdemo')
